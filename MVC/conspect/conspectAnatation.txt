****  @Component() -- аннотация которая создает bean и принимает на вход id
(название), если id отсутствует, принимает в качестве id название класса
только с маленькой буквы (RockMusic -> rockMusic)

****  @Autowired() -- аннотация используемая для внедрения зависимостей т.е
сама ищет подходящие компоненты и добавляет в нее зависимости

****  @Qualifier() -- аннотация которая уточняет какую зависимость внедрить
указывается в качестве аргумента id бина

**** @Scope() -- отвечает за создание объекта принимает на вход два параметра
"singleton" - указывает на то что объект будет создаваться один а все
остальные попытки его создать образуют ссылки на этот объект
"prototype") - указывает на то что при каждом вызове будет создаваться новая
копия этого объекта

**** @PostConstruct -- аннотация которая вызовет функцию в начале инициализации
объекта

**** @PreDestroy -- аннотация которая вызовет функцию в конце инициализации
объекта

**** @Value("${musicPlayer.name}") -- аннотация которая из файла musicPlayer.properties
назначает полям значения по указанному ключу, или передать любое другое значение

**** @Configuration -- помечает класс как конфигурационный файл для спринга


**** @ComponentScan -- принимает на вход путь до нахождения файлов
помеченных анатацией @Component()

**** @PropertySource принимает на вход путь файла musicPlayer.properties
для дальнейшего внедрения зависимостей

---------------------------------  Спринг MVC  ----------------------------------------

**** @EnableWebMvc -- показывает что это спринг MVC  приложение

**** @Controller -- аннотация которая помечает объект как контроллер для того чтобы Spring
смог отсканировать этот компонент

**** @GetMapping -- аннотация которая указывает адрес при ссылке на который вызывается функция под ним

**** @RequestMapping("/first") -- добавляет к  @GetMapping выбранному в пути дополнительный путь